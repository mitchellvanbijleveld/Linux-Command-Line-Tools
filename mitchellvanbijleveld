#!/bin/bash
SELF_VAR_UTILITY="mitchell"
SELF_VAR_UTILITY_SCRIPT="vanbijleveld"

##### DEFAULT GLOBAL VARIABLES ###################
export VAR_BIN_CONFIG_DIR="/etc/mitchellvanbijleveld/Linux-Command-Line-Tools"
export VAR_BIN_TEMP_DIR="/tmp/mitchellvanbijleveld/Linux-Command-Line-Tools"
##################################################

export VAR_SCRIPT_DEBUG=false
VAR_SCRIPT_ARGUMENTS=$(echo "$@" | sed "s/--DEBUG//g; s/^ *//; s/ \{2,\}/ /g")
export VAR_UTILITY=$(echo "$VAR_SCRIPT_ARGUMENTS" | awk '{print $1}')
export VAR_UTILITY_SCRIPT=$(echo "$VAR_SCRIPT_ARGUMENTS" | awk '{print $2}')
VAR_UTILITY_SCRIPT_ARGUMENTS=$(echo "$@" | sed "s/--DEBUG//g; s/$VAR_UTILITY//; s/$VAR_UTILITY_SCRIPT//; s/^ *//; s/ $//")

# Check Debug
if [[ "$@" == *"--DEBUG"* ]]; then
    export VAR_SCRIPT_DEBUG=true
    echo "DEBUG ENABLED"
    echo " - Script Arguments          : $@"
    echo " - Script Argumgnets - Flags : $VAR_SCRIPT_ARGUMENTS"
    echo " - Utility                   : $VAR_UTILITY"
    echo " - Utility Script            : $VAR_UTILITY_SCRIPT"
    echo " - Utility Script Arguments  : $VAR_UTILITY_SCRIPT_ARGUMENTS"
    echo ""
fi

# Function echoDebug()
# Prints messages if VAR_SCRIPT_DEBUG=true.
echoDebug () {
    echo_var_utility="$1"
    echo_var_utility_script="$2"
    echo_var_message="$3"
    if [[ "$3" == "" ]]; then
        echo_var_message="$1 $2"
        echo_var_utility=""
        echo_var_utility_script=""
    fi
    if $VAR_SCRIPT_DEBUG; then
        echo $(date +"%Y-%m-%d %H:%M:%S") "$(printf "%-25s\n" "$echo_var_utility/$echo_var_utility_script")" "[DEBUG]" ":" "$echo_var_message"
    fi
}

export -f echoDebug

# Function echoInfo()
# Prints messages if VAR_SCRIPT_DEBUG=true.
echoInfo () {
    echo_var_utility="$1"
    echo_var_utility_script="$2"
    echo_var_message="$3"
    if [[ "$3" == "" ]]; then
        echo_var_message="$1 $2"
        echo_var_utility=""
        echo_var_utility_script=""
    fi
    if $VAR_SCRIPT_DEBUG; then
        echo $(date +"%Y-%m-%d %H:%M:%S") "$(printf "%-25s\n" "$echo_var_utility/$echo_var_utility_script")" "[ INFO]" ":" "$echo_var_message"
    else
        echo "$echo_var_message"
    fi
}

export -f echoInfo

VAR_SCRIPT_REAL_PATH=$(realpath $0)
VAR_SCRIPT_DIR_NAME=$(dirname $VAR_SCRIPT_REAL_PATH)
export VAR_BIN_INSTALL_DIR=$VAR_SCRIPT_DIR_NAME
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" " - Script Real Path : $VAR_SCRIPT_REAL_PATH"
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" " - Script Dir Name  : $VAR_SCRIPT_DIR_NAME"
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" ""

VAR_UTILITY_FOLDER_PATH="$VAR_SCRIPT_DIR_NAME/$VAR_UTILITY"
VAR_UTILITY_SCRIPT_REAL_PATH="$VAR_UTILITY_FOLDER_PATH/$VAR_UTILITY_SCRIPT.sh"
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" " - Utility Folder Path : $VAR_UTILITY_FOLDER_PATH"
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" " - Utility Script Path  : $VAR_UTILITY_SCRIPT_REAL_PATH"
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" ""


# Function die_UtilityNotFound()
# Exits the script if utility does not exist.
die_UtilityNotFound () {
    echoInfo "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" "$1"
    echoInfo "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" "The bin '$(basename $0)' supports the following utilities:"
    for var_utility_dir in "$VAR_SCRIPT_DIR_NAME"/*; do
        if [ -d  "$var_utility_dir" ]; then
        var_utility=$(basename $var_utility_dir)
        echoInfo "$SELF_VAR_UTILITY" "$VSELF_AR_UTILITY_SCRIPT" " - $var_utility"
        fi
    done
    exit 1
}

# Function die_UtilityScriptNotFound()
# Exits the script if utility script does not exist.
die_UtilityScriptNotFound (){
    echoInfo "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" "$1"
    echoInfo "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" "The utility '$VAR_UTILITY' supports the following scripts:"
    for var_utility_script_real_path in "$VAR_UTILITY_FOLDER_PATH"/*; do
        var_utility_script=$(basename $var_utility_script_real_path)
        echoInfo "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" " - ${var_utility_script%.sh}"
    done
    exit 1
}

# Check if Utility is empty.
if [[ "$VAR_UTILITY" == "" ]]; then
    die_UtilityNotFound "No utility specified!"
fi

# Check if Utility exists.
if ! [ -d "$VAR_UTILITY_FOLDER_PATH" ]; then
    die_UtilityNotFound "The '$VAR_UTILITY' utility was not found!"
fi

# Check if Utility Script is empty.
if [[ "$VAR_UTILITY_SCRIPT" == "" ]]; then
    die_UtilityScriptNotFound "No script specified!"
fi

# Check if Utility Script exists.
if ! [ -f "$VAR_UTILITY_SCRIPT_REAL_PATH" ]; then
    die_UtilityScriptNotFound "The '$VAR_UTILITY_SCRIPT' script was not found within the '$VAR_UTILITY' utility!"
fi

# Start the utility script with arguments.
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" "Starting Utility Script [$VAR_UTILITY_SCRIPT_ARGUMENTS]..."
echoDebug "$SELF_VAR_UTILITY" "$SELF_VAR_UTILITY_SCRIPT" "$(ls -al $VAR_UTILITY_SCRIPT_REAL_PATH)"
"$(which bash)" "$VAR_UTILITY_SCRIPT_REAL_PATH" $VAR_UTILITY_SCRIPT_ARGUMENTS